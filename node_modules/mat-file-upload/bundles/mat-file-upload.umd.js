(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/forms'), require('@angular/material'), require('@angular/platform-browser/animations')) :
    typeof define === 'function' && define.amd ? define('mat-file-upload', ['exports', '@angular/core', '@angular/forms', '@angular/material', '@angular/platform-browser/animations'], factory) :
    (factory((global['mat-file-upload'] = {}),global.ng.core,global.ng.forms,global.ng.material,global.ng.platformBrowser.animations));
}(this, (function (exports,i0,forms,material,animations) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var MatFileUploadService = /** @class */ (function () {
        function MatFileUploadService() {
        }
        MatFileUploadService.decorators = [
            { type: i0.Injectable, args: [{
                        providedIn: 'root'
                    },] }
        ];
        /** @nocollapse */
        MatFileUploadService.ctorParameters = function () { return []; };
        /** @nocollapse */ MatFileUploadService.ngInjectableDef = i0.defineInjectable({ factory: function MatFileUploadService_Factory() { return new MatFileUploadService(); }, token: MatFileUploadService, providedIn: "root" });
        return MatFileUploadService;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var MatFileUploadComponent = /** @class */ (function () {
        function MatFileUploadComponent() {
            this.labelText = 'Select File(s)';
            this.allowMultipleFiles = false;
            this.showUploadButton = true;
            this.uploadClicked = new i0.EventEmitter();
            this.selectedFilesChanged = new i0.EventEmitter();
            this.selectedFileText = '';
        }
        /**
         * @return {?}
         */
        MatFileUploadComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () { };
        /**
         * @param {?=} files
         * @return {?}
         */
        MatFileUploadComponent.prototype.filesChanged = /**
         * @param {?=} files
         * @return {?}
         */
            function (files) {
                this.selectedFiles = files;
                this.selectedFilesChanged.emit(this.selectedFiles);
                if (this.selectedFiles) {
                    /** @type {?} */
                    var numSelectedFiles = this.selectedFiles.length;
                    this.selectedFileText =
                        numSelectedFiles === 1
                            ? this.selectedFiles[0].name
                            : numSelectedFiles + " files selected";
                }
                else {
                    this.selectedFileText = '';
                }
            };
        /**
         * @return {?}
         */
        MatFileUploadComponent.prototype.uploadFiles = /**
         * @return {?}
         */
            function () {
                this.uploadClicked.emit(this.selectedFiles);
            };
        MatFileUploadComponent.decorators = [
            { type: i0.Component, args: [{
                        selector: 'mat-file-upload',
                        template: "\n    <span class=\"file-input-text\">{{ labelText }}</span>\n    <button\n      mat-button\n      color=\"primary\"\n      class=\"file-input-button\"\n      (click)=\"fileInput.click()\"\n      aria-label=\"Select File(s)\"\n    >\n      <span>Select File(s)</span>\n      <input\n        #fileInput\n        type=\"file\"\n        style=\"display: none\"\n        [multiple]=\"allowMultipleFiles\"\n        (change)=\"filesChanged($event.target.files)\"\n      />\n    </button>\n    <button\n      mat-raised-button\n      color=\"primary\"\n      class=\"file-input-button\"\n      [disabled]=\"!selectedFiles\"\n      (click)=\"uploadFiles()\"\n      *ngIf=\"showUploadButton\"\n      aria-label=\"Upload File(s)\"\n    >\n      Upload\n    </button>\n    <span class=\"file-input-text\">{{ selectedFileText }}</span>\n    <button\n      mat-icon-button\n      (click)=\"filesChanged(null)\"\n      aria-label=\"Remove Selected File(s)\"\n    >\n      <mat-icon>close</mat-icon>\n    </button>\n  ",
                        styles: ['.file-input-button { margin-right: 8px !important }',
                            '.file-input-text { font-size: 14px !important; margin-right: 8px !important }']
                    }] }
        ];
        /** @nocollapse */
        MatFileUploadComponent.ctorParameters = function () { return []; };
        MatFileUploadComponent.propDecorators = {
            labelText: [{ type: i0.Input }],
            allowMultipleFiles: [{ type: i0.Input }],
            showUploadButton: [{ type: i0.Input }],
            uploadClicked: [{ type: i0.Output }],
            selectedFilesChanged: [{ type: i0.Output }]
        };
        return MatFileUploadComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var MatFileUploadModule = /** @class */ (function () {
        function MatFileUploadModule() {
        }
        MatFileUploadModule.decorators = [
            { type: i0.NgModule, args: [{
                        declarations: [MatFileUploadComponent],
                        imports: [
                            animations.BrowserAnimationsModule,
                            material.MatButtonModule,
                            material.MatIconModule,
                            material.MatInputModule,
                            material.MatSelectModule,
                            forms.FormsModule,
                        ],
                        exports: [MatFileUploadComponent],
                    },] }
        ];
        return MatFileUploadModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.MatFileUploadService = MatFileUploadService;
    exports.MatFileUploadComponent = MatFileUploadComponent;
    exports.MatFileUploadModule = MatFileUploadModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=mat-file-upload.umd.js.map