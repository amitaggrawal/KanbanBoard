import { Injectable, NgModule, Component, EventEmitter, Input, Output, defineInjectable } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { MatButtonModule, MatIconModule, MatInputModule, MatSelectModule } from '@angular/material';
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class MatFileUploadService {
    constructor() { }
}
MatFileUploadService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
/** @nocollapse */
MatFileUploadService.ctorParameters = () => [];
/** @nocollapse */ MatFileUploadService.ngInjectableDef = defineInjectable({ factory: function MatFileUploadService_Factory() { return new MatFileUploadService(); }, token: MatFileUploadService, providedIn: "root" });

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class MatFileUploadComponent {
    constructor() {
        this.labelText = 'Select File(s)';
        this.allowMultipleFiles = false;
        this.showUploadButton = true;
        this.uploadClicked = new EventEmitter();
        this.selectedFilesChanged = new EventEmitter();
        this.selectedFileText = '';
    }
    /**
     * @return {?}
     */
    ngOnInit() { }
    /**
     * @param {?=} files
     * @return {?}
     */
    filesChanged(files) {
        this.selectedFiles = files;
        this.selectedFilesChanged.emit(this.selectedFiles);
        if (this.selectedFiles) {
            /** @type {?} */
            const numSelectedFiles = this.selectedFiles.length;
            this.selectedFileText =
                numSelectedFiles === 1
                    ? this.selectedFiles[0].name
                    : `${numSelectedFiles} files selected`;
        }
        else {
            this.selectedFileText = '';
        }
    }
    /**
     * @return {?}
     */
    uploadFiles() {
        this.uploadClicked.emit(this.selectedFiles);
    }
}
MatFileUploadComponent.decorators = [
    { type: Component, args: [{
                selector: 'mat-file-upload',
                template: `
    <span class="file-input-text">{{ labelText }}</span>
    <button
      mat-button
      color="primary"
      class="file-input-button"
      (click)="fileInput.click()"
      aria-label="Select File(s)"
    >
      <span>Select File(s)</span>
      <input
        #fileInput
        type="file"
        style="display: none"
        [multiple]="allowMultipleFiles"
        (change)="filesChanged($event.target.files)"
      />
    </button>
    <button
      mat-raised-button
      color="primary"
      class="file-input-button"
      [disabled]="!selectedFiles"
      (click)="uploadFiles()"
      *ngIf="showUploadButton"
      aria-label="Upload File(s)"
    >
      Upload
    </button>
    <span class="file-input-text">{{ selectedFileText }}</span>
    <button
      mat-icon-button
      (click)="filesChanged(null)"
      aria-label="Remove Selected File(s)"
    >
      <mat-icon>close</mat-icon>
    </button>
  `,
                styles: ['.file-input-button { margin-right: 8px !important }',
                    '.file-input-text { font-size: 14px !important; margin-right: 8px !important }']
            }] }
];
/** @nocollapse */
MatFileUploadComponent.ctorParameters = () => [];
MatFileUploadComponent.propDecorators = {
    labelText: [{ type: Input }],
    allowMultipleFiles: [{ type: Input }],
    showUploadButton: [{ type: Input }],
    uploadClicked: [{ type: Output }],
    selectedFilesChanged: [{ type: Output }]
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class MatFileUploadModule {
}
MatFileUploadModule.decorators = [
    { type: NgModule, args: [{
                declarations: [MatFileUploadComponent],
                imports: [
                    BrowserAnimationsModule,
                    MatButtonModule,
                    MatIconModule,
                    MatInputModule,
                    MatSelectModule,
                    FormsModule,
                ],
                exports: [MatFileUploadComponent],
            },] }
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { MatFileUploadService, MatFileUploadComponent, MatFileUploadModule };

//# sourceMappingURL=mat-file-upload.js.map