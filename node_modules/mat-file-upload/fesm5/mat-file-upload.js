import { Injectable, NgModule, Component, EventEmitter, Input, Output, defineInjectable } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { MatButtonModule, MatIconModule, MatInputModule, MatSelectModule } from '@angular/material';
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var MatFileUploadService = /** @class */ (function () {
    function MatFileUploadService() {
    }
    MatFileUploadService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    MatFileUploadService.ctorParameters = function () { return []; };
    /** @nocollapse */ MatFileUploadService.ngInjectableDef = defineInjectable({ factory: function MatFileUploadService_Factory() { return new MatFileUploadService(); }, token: MatFileUploadService, providedIn: "root" });
    return MatFileUploadService;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var MatFileUploadComponent = /** @class */ (function () {
    function MatFileUploadComponent() {
        this.labelText = 'Select File(s)';
        this.allowMultipleFiles = false;
        this.showUploadButton = true;
        this.uploadClicked = new EventEmitter();
        this.selectedFilesChanged = new EventEmitter();
        this.selectedFileText = '';
    }
    /**
     * @return {?}
     */
    MatFileUploadComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { };
    /**
     * @param {?=} files
     * @return {?}
     */
    MatFileUploadComponent.prototype.filesChanged = /**
     * @param {?=} files
     * @return {?}
     */
    function (files) {
        this.selectedFiles = files;
        this.selectedFilesChanged.emit(this.selectedFiles);
        if (this.selectedFiles) {
            /** @type {?} */
            var numSelectedFiles = this.selectedFiles.length;
            this.selectedFileText =
                numSelectedFiles === 1
                    ? this.selectedFiles[0].name
                    : numSelectedFiles + " files selected";
        }
        else {
            this.selectedFileText = '';
        }
    };
    /**
     * @return {?}
     */
    MatFileUploadComponent.prototype.uploadFiles = /**
     * @return {?}
     */
    function () {
        this.uploadClicked.emit(this.selectedFiles);
    };
    MatFileUploadComponent.decorators = [
        { type: Component, args: [{
                    selector: 'mat-file-upload',
                    template: "\n    <span class=\"file-input-text\">{{ labelText }}</span>\n    <button\n      mat-button\n      color=\"primary\"\n      class=\"file-input-button\"\n      (click)=\"fileInput.click()\"\n      aria-label=\"Select File(s)\"\n    >\n      <span>Select File(s)</span>\n      <input\n        #fileInput\n        type=\"file\"\n        style=\"display: none\"\n        [multiple]=\"allowMultipleFiles\"\n        (change)=\"filesChanged($event.target.files)\"\n      />\n    </button>\n    <button\n      mat-raised-button\n      color=\"primary\"\n      class=\"file-input-button\"\n      [disabled]=\"!selectedFiles\"\n      (click)=\"uploadFiles()\"\n      *ngIf=\"showUploadButton\"\n      aria-label=\"Upload File(s)\"\n    >\n      Upload\n    </button>\n    <span class=\"file-input-text\">{{ selectedFileText }}</span>\n    <button\n      mat-icon-button\n      (click)=\"filesChanged(null)\"\n      aria-label=\"Remove Selected File(s)\"\n    >\n      <mat-icon>close</mat-icon>\n    </button>\n  ",
                    styles: ['.file-input-button { margin-right: 8px !important }',
                        '.file-input-text { font-size: 14px !important; margin-right: 8px !important }']
                }] }
    ];
    /** @nocollapse */
    MatFileUploadComponent.ctorParameters = function () { return []; };
    MatFileUploadComponent.propDecorators = {
        labelText: [{ type: Input }],
        allowMultipleFiles: [{ type: Input }],
        showUploadButton: [{ type: Input }],
        uploadClicked: [{ type: Output }],
        selectedFilesChanged: [{ type: Output }]
    };
    return MatFileUploadComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var MatFileUploadModule = /** @class */ (function () {
    function MatFileUploadModule() {
    }
    MatFileUploadModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [MatFileUploadComponent],
                    imports: [
                        BrowserAnimationsModule,
                        MatButtonModule,
                        MatIconModule,
                        MatInputModule,
                        MatSelectModule,
                        FormsModule,
                    ],
                    exports: [MatFileUploadComponent],
                },] }
    ];
    return MatFileUploadModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { MatFileUploadService, MatFileUploadComponent, MatFileUploadModule };

//# sourceMappingURL=mat-file-upload.js.map